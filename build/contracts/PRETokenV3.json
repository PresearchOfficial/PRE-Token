{
  "contractName": "PRETokenV3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizationCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "AuthorizationUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANCEL_AUTHORIZATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "RECEIVE_WITH_AUTHORIZATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TRANSFER_AUTHORIZER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TRANSFER_WITH_AUTHORIZATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "authorizationState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorizer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "cancelAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validAfter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validBefore",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "receiveWithAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "transferBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validAfter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validBefore",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "transferWithAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recover",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"AuthorizationCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"AuthorizationUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANCEL_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RECEIVE_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_AUTHORIZER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"authorizationState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"cancelAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"receiveWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferBatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"transferWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Presearch ERC20 Token * Supply capped at 1B.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"authorizationState(address,bytes32)\":{\"details\":\"Nonces are randomly generated 32-byte data unique to the authorizer's address\",\"params\":{\"authorizer\":\"Authorizer's address\",\"nonce\":\"Nonce of the authorization\"},\"returns\":{\"_0\":\"True if the nonce is used\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `amount` tokens from the caller's address     * Requirements:     * - `amount` cannot be greater than the caller's token balance.\"},\"cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)\":{\"params\":{\"authorizer\":\"Authorizer's address\",\"nonce\":\"Nonce of the authorization\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"v\":\"v of the signature\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Mints new tokens.     * Requirements:     * - the caller must have the `MINTER_ROLE`. - the `totalSupply` + `amount` must not exceed max supply of 1B.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)\":{\"details\":\"This has an additional check to ensure that the payee's address matches the caller of this function to prevent front-running attacks. (See security considerations)\",\"params\":{\"from\":\"Payer's address (Authorizer)\",\"nonce\":\"Unique nonce\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"to\":\"Payee's address\",\"v\":\"v of the signature\",\"validAfter\":\"The time after which this is valid (unix time)\",\"validBefore\":\"The time before which this is valid (unix time)\",\"value\":\"Amount to be transferred\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferBatch(address[],uint256[])\":{\"details\":\"Send multiple transfers as a batch within a single transaction This is much more efficient than sending independent transactions.  This method should between 28% of gas (2 transfers)  and 50%-60% of gas (10+ transfers)     * Calling conditions:     * Emits an {Transfer} event for each individual successful transfer.     * Requirements:     * - `recipients[]` length must equal  `amounts[]` length. -  The amount to send `recipients[i]` must be at `amounts[i]` - `recipient` cannot be the zero address. - `balance` of the calling account must be >= the sum of values in `amounts` going to other accounts\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)\":{\"params\":{\"from\":\"Payer's address (Authorizer)\",\"nonce\":\"Unique nonce\",\"r\":\"r of the signature\",\"s\":\"s of the signature\",\"to\":\"Payee's address\",\"v\":\"v of the signature\",\"validAfter\":\"The time after which this is valid (unix time)\",\"validBefore\":\"The time before which this is valid (unix time)\",\"value\":\"Amount to be transferred\"}},\"unpause()\":{\"details\":\"Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"}}},\"userdoc\":{\"methods\":{\"authorizationState(address,bytes32)\":{\"notice\":\"Returns the state of an authorization\"},\"cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Attempt to cancel an authorization\"},\"receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Receive a transfer with a signed authorization from the payer\"},\"transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Execute a transfer with a signed authorization\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PRETokenV3.sol\":\"PRETokenV3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1337},\"remappings\":[]},\"sources\":{\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/EIP712.sol\":{\"keccak256\":\"0xbf8729c5a74cc7d33d015ced77aed9be4a61c0889e819975040395e670bc47e8\",\"urls\":[\"bzz-raw://36253585931e38add4d8d25027a530cb87ff5de4b09d7a3c7606fdbefba04885\",\"dweb:/ipfs/QmbhMWvWjJ9nTnw6BhKLZaZUjScbJdXsfePvhqQH2VJer7\"]},\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/EnhancedERC20.sol\":{\"keccak256\":\"0x0127cb9960b4d89ab4e8b24ff7de2cd0886e1540560abc0e31cee52c909469ac\",\"urls\":[\"bzz-raw://f5886138089364f93129d3a789e2dfecc1f249a1b7343d1c5437c476aae60eff\",\"dweb:/ipfs/QmdLMnRJd4wckijb4mSmimiupoSUqN7xv1PswNQimomYgE\"]},\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/ManagedEnhancedERC20.sol\":{\"keccak256\":\"0x10aed6fd146c9f25b8c463b5c541470cae31b50055ebc6f662a4e4677703a971\",\"urls\":[\"bzz-raw://c4d8737d2c5d6fb82057bc096f02de4030b381fc645644525759cc09b665c721\",\"dweb:/ipfs/QmUPxPMVKNjdvdoJiW8awqxkjPXo11iw2cYV41hnid4xsv\"]},\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PREToken.sol\":{\"keccak256\":\"0x7ba2ae9da96411564c9985c9615751f0e8896a1f21985c852c9212af11e92860\",\"urls\":[\"bzz-raw://e2de9bc494a4055c897e4dcb95e2f825fa254d224717a48b4cbddd3d057740bf\",\"dweb:/ipfs/Qmb1fNT352KueDeH7Eku2PQH6gVmTYemw8k4L3jFY9SyPi\"]},\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PRETokenV2.sol\":{\"keccak256\":\"0x185871390131956752133ba42af3d803738281d796a8b7e8069170999dbcd2b2\",\"urls\":[\"bzz-raw://8ba2dcc2e682f30a20a6ad78530f96bc1ae0332dd2ee5a4c4e62c3769b3b815c\",\"dweb:/ipfs/Qmcqfq3fZhopTnAWXaCoUTgMHSjCKsSwPJ7Z65aVJMDRS5\"]},\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PRETokenV3.sol\":{\"keccak256\":\"0x03299d9d1bb0745d4b236253273b64bbbf9d2247ebda323745ea6a1caf6e7f7b\",\"urls\":[\"bzz-raw://d128343e884cb63bec655684f9821fe6fb885b03664dd32c98c4934d939deadd\",\"dweb:/ipfs/QmP574SQ8U8xm5TbWCvfy7xnRbsPwrvcFmVKnHXzh74PyQ\"]},\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/TransferAuthorizableERC20.sol\":{\"keccak256\":\"0x822e71a83c7b96400985a3a59c853b810d2b9e32695bd4c4b166d0dc7c180873\",\"urls\":[\"bzz-raw://20031d9b4fe198d7b07df6fad9db97abdb57222aa744e15169e07c403b5dee70\",\"dweb:/ipfs/QmQYuhNxhDmBaMyGWHrRDbj1cu8bd8gAxQN1CixonD3p2H\"]},\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/lib/ECDSA.sol\":{\"keccak256\":\"0x481d7a6735bac6e6e016031a38a6274fa3f8ae0edc23b9c57a7ed51e2e64ef44\",\"urls\":[\"bzz-raw://fac9423f3da6c4d7d79d8b32e23b7fc6ee229bf742a97ba5102cbe03138dabed\",\"dweb:/ipfs/QmRMpgXY3t8XqoTSairxqMy7ffMUGrZ5151fHV1Ddqvywa\"]},\"/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/lib/Strings.sol\":{\"keccak256\":\"0x6ed29d4b74b431656696ed702942d4635b4a77e18d4c484e6a8a46ebdd4f1685\",\"urls\":[\"bzz-raw://5205a0ec35d60f5a528566ac66396f88398ffd8c21c624ee6d6cb1333bbbe47c\",\"dweb:/ipfs/Qmdp1z6yLy1i4DjfLMLtuQPt4Hu1C4QooNhZHLx1dvM6rw\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x3954a5ee18b9297616912390eac7b0fe698e6ffea5a50dc3ccb0980cae210e86\",\"urls\":[\"bzz-raw://944779923ae00addaad98671de2303268765d53f1b0d66076280585edd084862\",\"dweb:/ipfs/QmRtRFCkvsWD3c6WBpAh3wgMZKXBaFfRAvB76TsVFiUdEw\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x2ad5473fe88d9ab30c6cd495ab8895daae8c4a48cf8231282a2d339387b35006\",\"urls\":[\"bzz-raw://a737c60474c063efc28e5922b6a1d073588c010eb67f883273d3ec29d8e52d6b\",\"dweb:/ipfs/QmWCeqeZhR45S1mcjPRYEMy1DCHMy9sXDfwYLPycFRh2Nk\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506131b9806100206000396000f3fe608060405234801561001057600080fd5b50600436106102ad5760003560e01c80638456cb591161017b578063ce746024116100d8578063e3ee160e1161008c578063e94a010211610071578063e94a010214610920578063ed24911d1461094c578063ef55bec614610954576102ad565b8063e3ee160e146108b9578063e63ab1e914610918576102ad565b8063d547741f116100bd578063d547741f14610857578063d916948714610883578063dd62ed3e1461088b576102ad565b8063ce74602414610847578063d53913931461084f576102ad565b8063a217fddf1161012f578063a9059cbb11610114578063a9059cbb146107f6578063b17123b214610822578063ca15c8731461082a576102ad565b8063a217fddf146107c2578063a457c2d7146107ca576102ad565b806391d148541161016057806391d148541461078657806395d89b41146107b2578063a0cc6a68146107ba576102ad565b80638456cb591461073f5780639010d07c14610747576102ad565b80633b3e672f116102295780635a049a70116101dd57806370a08231116101c257806370a08231146107095780637f2eecc31461072f5780638129fc1c14610737576102ad565b80635a049a70146106c05780635c975abb14610701576102ad565b806340c10f191161020e57806340c10f191461054a57806342966c68146105765780634cd88b7614610593576102ad565b80633b3e672f146104805780633f4ba83a14610542576102ad565b8063248a9ca311610280578063313ce56711610265578063313ce5671461040a57806336568abe146104285780633950935114610454576102ad565b8063248a9ca3146103bf5780632f2ff15d146103dc576102ad565b806306fdde03146102b2578063095ea7b31461032f57806318160ddd1461036f57806323b872dd14610389575b600080fd5b6102ba6109b3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102f45781810151838201526020016102dc565b50505050905090810190601f1680156103215780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61035b6004803603604081101561034557600080fd5b506001600160a01b038135169060200135610a4a565b604080519115158252519081900360200190f35b610377610a68565b60408051918252519081900360200190f35b61035b6004803603606081101561039f57600080fd5b506001600160a01b03813581169160208101359091169060400135610a6e565b610377600480360360208110156103d557600080fd5b5035610afb565b610408600480360360408110156103f257600080fd5b50803590602001356001600160a01b0316610b10565b005b610412610b7c565b6040805160ff9092168252519081900360200190f35b6104086004803603604081101561043e57600080fd5b50803590602001356001600160a01b0316610b85565b61035b6004803603604081101561046a57600080fd5b506001600160a01b038135169060200135610be6565b61035b6004803603604081101561049657600080fd5b8101906020810181356401000000008111156104b157600080fd5b8201836020820111156104c357600080fd5b803590602001918460208302840111640100000000831117156104e557600080fd5b91939092909160208101903564010000000081111561050357600080fd5b82018360208201111561051557600080fd5b8035906020019184602083028401116401000000008311171561053757600080fd5b509092509050610c3a565b610408610df2565b6104086004803603604081101561056057600080fd5b506001600160a01b038135169060200135610e63565b6104086004803603602081101561058c57600080fd5b5035610ed4565b610408600480360360408110156105a957600080fd5b8101906020810181356401000000008111156105c457600080fd5b8201836020820111156105d657600080fd5b803590602001918460018302840111640100000000831117156105f857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561064b57600080fd5b82018360208201111561065d57600080fd5b8035906020019184600183028401116401000000008311171561067f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ee8945050505050565b610408600480360360a08110156106d657600080fd5b506001600160a01b038135169060208101359060ff6040820135169060608101359060800135610fbe565b61035b611215565b6103776004803603602081101561071f57600080fd5b50356001600160a01b031661121e565b610377611239565b61040861125d565b61040861133a565b61076a6004803603604081101561075d57600080fd5b50803590602001356113a9565b604080516001600160a01b039092168252519081900360200190f35b61035b6004803603604081101561079c57600080fd5b50803590602001356001600160a01b03166113ce565b6102ba6113ec565b61037761144d565b610377611471565b61035b600480360360408110156107e057600080fd5b506001600160a01b038135169060200135611476565b61035b6004803603604081101561080c57600080fd5b506001600160a01b0381351690602001356114e4565b6103776114f8565b6103776004803603602081101561084057600080fd5b503561152d565b610408611544565b6103776115ce565b6104086004803603604081101561086d57600080fd5b50803590602001356001600160a01b03166115f1565b61037761164a565b610377600480360360408110156108a157600080fd5b506001600160a01b038135811691602001351661166e565b61040860048036036101208110156108d057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060ff60c0820135169060e0810135906101000135611699565b61037761174d565b61035b6004803603604081101561093657600080fd5b506001600160a01b038135169060200135611770565b61037761179c565b610408600480360361012081101561096b57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060ff60c0820135169060e08101359061010001356117ab565b609a8054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a3f5780601f10610a1457610100808354040283529160200191610a3f565b820191906000526020600020905b815481529060010190602001808311610a2257829003601f168201915b505050505090505b90565b6000610a5e610a576118ab565b84846118af565b5060015b92915050565b60995490565b6000610a7b84848461199b565b610af184610a876118ab565b610aec8560405180606001604052806028815260200161301e602891396001600160a01b038a16600090815260986020526040812090610ac56118ab565b6001600160a01b03168152602081019190915260400160002054919063ffffffff611b0116565b6118af565b5060019392505050565b60009081526065602052604090206002015490565b600082815260656020526040902060020154610b3390610b2e6118ab565b6113ce565b610b6e5760405162461bcd60e51b815260040180806020018281038252602f815260200180612cfe602f913960400191505060405180910390fd5b610b788282611b5b565b5050565b609c5460ff1690565b610b8d6118ab565b6001600160a01b0316816001600160a01b031614610bdc5760405162461bcd60e51b815260040180806020018281038252602f815260200180613155602f913960400191505060405180910390fd5b610b788282611bca565b6000610a5e610bf36118ab565b84610aec8560986000610c046118ab565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611c3916565b6000838214610c4857600080fd5b610c50611c93565b6000610c5a6118ab565b6001600160a01b0381166000908152609760205260408120549192505b84811015610dcc576000868683818110610c8d57fe5b9050602002013590506000898984818110610ca457fe5b905060200201356001600160a01b0316905081841015610cf55760405162461bcd60e51b815260040180806020018281038252602e815260200180612d71602e913960400191505060405180910390fd5b6001600160a01b038116610d3a5760405162461bcd60e51b8152600401808060200182810382526023815260200180612cdb6023913960400191505060405180910390fd5b806001600160a01b0316856001600160a01b031614610d77576001600160a01b038116600090815260976020526040902080548301905592819003925b806001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050600101610c77565b506001600160a01b03909116600090815260976020526040902055506001949350505050565b604080516a5041555345525f524f4c4560a81b8152905190819003600b019020610e1e90610b2e6118ab565b610e595760405162461bcd60e51b8152600401808060200182810382526036815260200180612e3d6036913960400191505060405180910390fd5b610e61611cdf565b565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b019020610e8f90610b2e6118ab565b610eca5760405162461bcd60e51b8152600401808060200182810382526030815260200180612d9f6030913960400191505060405180910390fd5b610b788282611d86565b610ee5610edf6118ab565b82611e84565b50565b600054610100900460ff1680610f015750610f01611f8c565b80610f0f575060005460ff16155b610f4a5760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff16158015610f75576000805460ff1961ff0019909116610100171660011790555b610f7d611f92565b610f85611f92565b610f8f8383612033565b610f9761210b565b610f9f6121b6565b610fa761227c565b8015610fb9576000805461ff00191690555b505050565b6001600160a01b038516600090815261019460209081526040808320878452825291829020548251808401909352601e83527f454950333030393a20617574686f72697a6174696f6e206973207573656400009183019190915260ff16156110a45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611069578181015183820152602001611051565b50505050905090810190601f1680156110965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50604080517f158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a159742960208201526001600160a01b038716818301526060818101879052825180830390910181526080909101909152600061111061110461232e565b83516020850120612361565b9050866001600160a01b0316611128828787876123b7565b6001600160a01b0316146040518060400160405280601a81526020017f454950333030393a20696e76616c6964207369676e6174757265000000000000815250906111b45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611069578181015183820152602001611051565b506001600160a01b0387166000818152610194602090815260408083208a8452909152808220805460ff19166001179055518892917f1cdd46ff242716cdaa72d159d339a485b3438398348d68f09d7c8c0a59353d8191a350505050505050565b60c95460ff1690565b6001600160a01b031660009081526097602052604090205490565b7fd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de881565b6101f95460ff16156112a05760405162461bcd60e51b815260040180806020018281038252602b815260200180612e73602b913960400191505060405180910390fd5b6112ad6000610b2e6118ab565b6112e85760405162461bcd60e51b815260040180806020018281038252602f815260200180612ec0602f913960400191505060405180910390fd5b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b019020611319906113146118ab565b610b6e565b6b033b2e3c9fd0803ce800000061012d556101f9805460ff19166001179055565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902061136690610b2e6118ab565b6113a15760405162461bcd60e51b8152600401808060200182810382526034815260200180612f1f6034913960400191505060405180910390fd5b610e616123df565b60008281526065602052604081206113c7908363ffffffff61246d16565b9392505050565b60008281526065602052604081206113c7908363ffffffff61247916565b609b8054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a3f5780601f10610a1457610100808354040283529160200191610a3f565b7f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226781565b600081565b6000610a5e6114836118ab565b84610aec856040518060600160405280602581526020016130ff60259139609860006114ad6118ab565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611b0116565b6000610a5e6114f16118ab565b848461199b565b604080517f5452414e534645525f415554484f52495a45525f524f4c4500000000000000008152905190819003601801902081565b6000818152606560205260408120610a629061248e565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902061157090610b2e6118ab565b6115ab5760405162461bcd60e51b8152600401808060200182810382526030815260200180612d9f6030913960400191505060405180910390fd5b60006115b63061121e565b1115610e6157610e61306115c93061121e565b611e84565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902081565b60008281526065602052604090206002015461160f90610b2e6118ab565b610bdc5760405162461bcd60e51b8152600401808060200182810382526030815260200180612eef6030913960400191505060405180910390fd5b7f158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a159742981565b6001600160a01b03918216600090815260986020908152604080832093909416825291909152205490565b604080517f5452414e534645525f415554484f52495a45525f524f4c450000000000000000815290519081900360180190206116d5908a6113ce565b6117105760405162461bcd60e51b8152600401808060200182810382526057815260200180612f536057913960600191505060405180910390fd5b6117427f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a22678a8a8a8a8a8a8a8a8a612499565b505050505050505050565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902081565b6001600160a01b0391909116600090815261019460209081526040808320938352929052205460ff1690565b60006117a661232e565b905090565b6117b36118ab565b6001600160a01b0316886001600160a01b0316146118025760405162461bcd60e51b8152600401808060200182810382526021815260200180612df66021913960400191505060405180910390fd5b604080517f5452414e534645525f415554484f52495a45525f524f4c4500000000000000008152905190819003601801902061183e908a6113ce565b6118795760405162461bcd60e51b8152600401808060200182810382526057815260200180612f536057913960600191505060405180910390fd5b6117427fd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de88a8a8a8a8a8a8a8a8a612499565b3390565b6001600160a01b0383166118f45760405162461bcd60e51b81526004018080602001828103825260248152602001806130ba6024913960400191505060405180910390fd5b6001600160a01b0382166119395760405162461bcd60e51b8152600401808060200182810382526022815260200180612d4f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260986020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166119e05760405162461bcd60e51b81526004018080602001828103825260258152602001806130956025913960400191505060405180910390fd5b6001600160a01b038216611a255760405162461bcd60e51b8152600401808060200182810382526023815260200180612cdb6023913960400191505060405180910390fd5b611a2d611c93565b611a7081604051806060016040528060268152602001612e17602691396001600160a01b038616600090815260976020526040902054919063ffffffff611b0116565b6001600160a01b038085166000908152609760205260408082209390935590841681522054611aa5908263ffffffff611c3916565b6001600160a01b0380841660008181526097602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611b535760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611069578181015183820152602001611051565b505050900390565b6000828152606560205260409020611b79908263ffffffff61273216565b15610b7857611b866118ab565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152606560205260409020611be8908263ffffffff61274716565b15610b7857611bf56118ab565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000828201838110156113c7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611c9b610e61565b611ca3611215565b15610e615760405162461bcd60e51b81526004018080602001828103825260318152602001806131246031913960400191505060405180910390fd5b60c95460ff16611d36576040805162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b60c9805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611d696118ab565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b038216611de1576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611ded6000838361275c565b609954611e00908263ffffffff611c3916565b6099556001600160a01b038216600090815260976020526040902054611e2c908263ffffffff611c3916565b6001600160a01b03831660008181526097602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611ec95760405162461bcd60e51b81526004018080602001828103825260218152602001806130746021913960400191505060405180910390fd5b611ed582600083610fb9565b611f1881604051806060016040528060228152602001612d2d602291396001600160a01b038516600090815260976020526040902054919063ffffffff611b0116565b6001600160a01b038316600090815260976020526040902055609954611f44908263ffffffff61276716565b6099556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b303b1590565b600054610100900460ff1680611fab5750611fab611f8c565b80611fb9575060005460ff16155b611ff45760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff1615801561201f576000805460ff1961ff0019909116610100171660011790555b8015610ee5576000805461ff001916905550565b600054610100900460ff168061204c575061204c611f8c565b8061205a575060005460ff16155b6120955760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff161580156120c0576000805460ff1961ff0019909116610100171660011790555b82516120d390609a906020860190612c20565b5081516120e790609b906020850190612c20565b50609c805460ff191660121790558015610fb9576000805461ff0019169055505050565b600054610100900460ff16806121245750612124611f8c565b80612132575060005460ff16155b61216d5760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff16158015612198576000805460ff1961ff0019909116610100171660011790555b60c9805460ff191690558015610ee5576000805461ff001916905550565b600054610100900460ff16806121cf57506121cf611f8c565b806121dd575060005460ff16155b6122185760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff16158015612243576000805460ff1961ff0019909116610100171660011790555b61225060006113146118ab565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902061201f906113146118ab565b600054610100900460ff16806122955750612295611f8c565b806122a3575060005460ff16155b6122de5760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff16158015612309576000805460ff1961ff0019909116610100171660011790555b6b019d971e4fe8401e7400000061012d5561201f6123256118ab565b61012d54611d86565b60006117a66040518080612fcc60529139605201905060405180910390206123546127a9565b61235c6127b0565b6127b7565b604080517f19010000000000000000000000000000000000000000000000000000000000006020808301919091526022820194909452604280820193909352815180820390930183526062019052805191012090565b60008060006123c8878787876127fc565b915091506123d5816128ed565b5095945050505050565b60c95460ff1615612437576040805162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b60c9805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d696118ab565b60006113c78383612a5e565b60006113c7836001600160a01b038416612ac2565b6000610a6282612ada565b8542116124d75760405162461bcd60e51b8152600401808060200182810382526027815260200180612dcf6027913960400191505060405180910390fd5b8442106125155760405162461bcd60e51b81526004018080602001828103825260218152602001806130de6021913960400191505060405180910390fd5b6001600160a01b038916600090815261019460209081526040808320878452825291829020548251808401909352601e83527f454950333030393a20617574686f72697a6174696f6e206973207573656400009183019190915260ff16156125be5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611069578181015183820152602001611051565b5060408051602081018c90526001600160a01b03808c16828401528a1660608201526080810189905260a0810188905260c0810187905260e080820187905282518083039091018152610100909101909152600061261d61110461232e565b90508a6001600160a01b0316612635828787876123b7565b6001600160a01b0316146040518060400160405280601a81526020017f454950333030393a20696e76616c6964207369676e6174757265000000000000815250906126c15760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611069578181015183820152602001611051565b506001600160a01b038b166000818152610194602090815260408083208a8452909152808220805460ff19166001179055518892917f98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a591a36127248b8b8b61199b565b505050505050505050505050565b60006113c7836001600160a01b038416612ade565b60006113c7836001600160a01b038416612b28565b610fb9838383612bee565b60006113c783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611b01565b6101605490565b6101615490565b604080516020808201959095528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561283357506000905060036128e4565b8460ff16601b1415801561284b57508460ff16601c14155b1561285c57506000905060046128e4565b60408051600080825260208083018085528a905260ff89168385015260608301889052608083018790529251909260019260a080820193601f1981019281900390910190855afa1580156128b4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166128dd575060009150600190506128e4565b9150600090505b94509492505050565b60008160048111156128fb57fe5b141561290657610ee5565b600181600481111561291457fe5b1415612967576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b600281600481111561297557fe5b14156129c8576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60038160048111156129d657fe5b1415612a135760405162461bcd60e51b8152600401808060200182810382526022815260200180612e9e6022913960400191505060405180910390fd5b6004816004811115612a2157fe5b1415610ee55760405162461bcd60e51b8152600401808060200182810382526022815260200180612faa6022913960400191505060405180910390fd5b81546000908210612aa05760405162461bcd60e51b8152600401808060200182810382526022815260200180612cb96022913960400191505060405180910390fd5b826000018281548110612aaf57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000612aea8383612ac2565b612b2057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a62565b506000610a62565b60008181526001830160205260408120548015612be45783546000198083019190810190600090879083908110612b5b57fe5b9060005260206000200154905080876000018481548110612b7857fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080612ba857fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a62565b6000915050610a62565b61012d54612c0a82612bfe610a68565b9063ffffffff611c3916565b1115612c1557600080fd5b610fb9838383610fb9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c6157805160ff1916838001178555612c8e565b82800160010185558215612c8e579182015b82811115612c8e578251825591602001919060010190612c73565b50612c9a929150612c9e565b5090565b610a4791905b80821115612c9a5760008155600101612ca456fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a20496e73756666696369656e742062616c616e636520666f72206261746368207472616e73666572505245546f6b656e56333a204f6e6c79204d696e74657220726f6c652063616e2072756e2074686973206d6574686f64454950333030393a20617574686f72697a6174696f6e206973206e6f74207965742076616c6964454950333030393a2063616c6c6572206d7573742062652074686520706179656545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d616e61676564456e68616e63656445524332303a206d75737420686176652070617573657220726f6c6520746f20756e7061757365505245546f6b656e56333a20436f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202773272076616c7565505245546f6b656e56333a204f6e6c792041646d696e20726f6c652063616e2072756e2074686973206d6574686f64416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654d616e61676564456e68616e63656445524332303a206d75737420686176652070617573657220726f6c6520746f2070617573655472616e73666572417574686f72697a61626c6545524332303a2066726f6d2061646472657373206973206e6f7420617574686f72697a656420666f72207472616e7366657257697468417574686f72697a6174696f6e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e74726163742945524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373454950333030393a20617574686f72697a6174696f6e206973206578706972656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4d616e61676564456e68616e63656445524332303a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bad2c516d2b9bc661bdb20f72660967b9ffc5aa513a9cf0ea4b927df7e16680764736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102ad5760003560e01c80638456cb591161017b578063ce746024116100d8578063e3ee160e1161008c578063e94a010211610071578063e94a010214610920578063ed24911d1461094c578063ef55bec614610954576102ad565b8063e3ee160e146108b9578063e63ab1e914610918576102ad565b8063d547741f116100bd578063d547741f14610857578063d916948714610883578063dd62ed3e1461088b576102ad565b8063ce74602414610847578063d53913931461084f576102ad565b8063a217fddf1161012f578063a9059cbb11610114578063a9059cbb146107f6578063b17123b214610822578063ca15c8731461082a576102ad565b8063a217fddf146107c2578063a457c2d7146107ca576102ad565b806391d148541161016057806391d148541461078657806395d89b41146107b2578063a0cc6a68146107ba576102ad565b80638456cb591461073f5780639010d07c14610747576102ad565b80633b3e672f116102295780635a049a70116101dd57806370a08231116101c257806370a08231146107095780637f2eecc31461072f5780638129fc1c14610737576102ad565b80635a049a70146106c05780635c975abb14610701576102ad565b806340c10f191161020e57806340c10f191461054a57806342966c68146105765780634cd88b7614610593576102ad565b80633b3e672f146104805780633f4ba83a14610542576102ad565b8063248a9ca311610280578063313ce56711610265578063313ce5671461040a57806336568abe146104285780633950935114610454576102ad565b8063248a9ca3146103bf5780632f2ff15d146103dc576102ad565b806306fdde03146102b2578063095ea7b31461032f57806318160ddd1461036f57806323b872dd14610389575b600080fd5b6102ba6109b3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102f45781810151838201526020016102dc565b50505050905090810190601f1680156103215780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61035b6004803603604081101561034557600080fd5b506001600160a01b038135169060200135610a4a565b604080519115158252519081900360200190f35b610377610a68565b60408051918252519081900360200190f35b61035b6004803603606081101561039f57600080fd5b506001600160a01b03813581169160208101359091169060400135610a6e565b610377600480360360208110156103d557600080fd5b5035610afb565b610408600480360360408110156103f257600080fd5b50803590602001356001600160a01b0316610b10565b005b610412610b7c565b6040805160ff9092168252519081900360200190f35b6104086004803603604081101561043e57600080fd5b50803590602001356001600160a01b0316610b85565b61035b6004803603604081101561046a57600080fd5b506001600160a01b038135169060200135610be6565b61035b6004803603604081101561049657600080fd5b8101906020810181356401000000008111156104b157600080fd5b8201836020820111156104c357600080fd5b803590602001918460208302840111640100000000831117156104e557600080fd5b91939092909160208101903564010000000081111561050357600080fd5b82018360208201111561051557600080fd5b8035906020019184602083028401116401000000008311171561053757600080fd5b509092509050610c3a565b610408610df2565b6104086004803603604081101561056057600080fd5b506001600160a01b038135169060200135610e63565b6104086004803603602081101561058c57600080fd5b5035610ed4565b610408600480360360408110156105a957600080fd5b8101906020810181356401000000008111156105c457600080fd5b8201836020820111156105d657600080fd5b803590602001918460018302840111640100000000831117156105f857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561064b57600080fd5b82018360208201111561065d57600080fd5b8035906020019184600183028401116401000000008311171561067f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ee8945050505050565b610408600480360360a08110156106d657600080fd5b506001600160a01b038135169060208101359060ff6040820135169060608101359060800135610fbe565b61035b611215565b6103776004803603602081101561071f57600080fd5b50356001600160a01b031661121e565b610377611239565b61040861125d565b61040861133a565b61076a6004803603604081101561075d57600080fd5b50803590602001356113a9565b604080516001600160a01b039092168252519081900360200190f35b61035b6004803603604081101561079c57600080fd5b50803590602001356001600160a01b03166113ce565b6102ba6113ec565b61037761144d565b610377611471565b61035b600480360360408110156107e057600080fd5b506001600160a01b038135169060200135611476565b61035b6004803603604081101561080c57600080fd5b506001600160a01b0381351690602001356114e4565b6103776114f8565b6103776004803603602081101561084057600080fd5b503561152d565b610408611544565b6103776115ce565b6104086004803603604081101561086d57600080fd5b50803590602001356001600160a01b03166115f1565b61037761164a565b610377600480360360408110156108a157600080fd5b506001600160a01b038135811691602001351661166e565b61040860048036036101208110156108d057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060ff60c0820135169060e0810135906101000135611699565b61037761174d565b61035b6004803603604081101561093657600080fd5b506001600160a01b038135169060200135611770565b61037761179c565b610408600480360361012081101561096b57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060ff60c0820135169060e08101359061010001356117ab565b609a8054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a3f5780601f10610a1457610100808354040283529160200191610a3f565b820191906000526020600020905b815481529060010190602001808311610a2257829003601f168201915b505050505090505b90565b6000610a5e610a576118ab565b84846118af565b5060015b92915050565b60995490565b6000610a7b84848461199b565b610af184610a876118ab565b610aec8560405180606001604052806028815260200161301e602891396001600160a01b038a16600090815260986020526040812090610ac56118ab565b6001600160a01b03168152602081019190915260400160002054919063ffffffff611b0116565b6118af565b5060019392505050565b60009081526065602052604090206002015490565b600082815260656020526040902060020154610b3390610b2e6118ab565b6113ce565b610b6e5760405162461bcd60e51b815260040180806020018281038252602f815260200180612cfe602f913960400191505060405180910390fd5b610b788282611b5b565b5050565b609c5460ff1690565b610b8d6118ab565b6001600160a01b0316816001600160a01b031614610bdc5760405162461bcd60e51b815260040180806020018281038252602f815260200180613155602f913960400191505060405180910390fd5b610b788282611bca565b6000610a5e610bf36118ab565b84610aec8560986000610c046118ab565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611c3916565b6000838214610c4857600080fd5b610c50611c93565b6000610c5a6118ab565b6001600160a01b0381166000908152609760205260408120549192505b84811015610dcc576000868683818110610c8d57fe5b9050602002013590506000898984818110610ca457fe5b905060200201356001600160a01b0316905081841015610cf55760405162461bcd60e51b815260040180806020018281038252602e815260200180612d71602e913960400191505060405180910390fd5b6001600160a01b038116610d3a5760405162461bcd60e51b8152600401808060200182810382526023815260200180612cdb6023913960400191505060405180910390fd5b806001600160a01b0316856001600160a01b031614610d77576001600160a01b038116600090815260976020526040902080548301905592819003925b806001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050600101610c77565b506001600160a01b03909116600090815260976020526040902055506001949350505050565b604080516a5041555345525f524f4c4560a81b8152905190819003600b019020610e1e90610b2e6118ab565b610e595760405162461bcd60e51b8152600401808060200182810382526036815260200180612e3d6036913960400191505060405180910390fd5b610e61611cdf565b565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b019020610e8f90610b2e6118ab565b610eca5760405162461bcd60e51b8152600401808060200182810382526030815260200180612d9f6030913960400191505060405180910390fd5b610b788282611d86565b610ee5610edf6118ab565b82611e84565b50565b600054610100900460ff1680610f015750610f01611f8c565b80610f0f575060005460ff16155b610f4a5760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff16158015610f75576000805460ff1961ff0019909116610100171660011790555b610f7d611f92565b610f85611f92565b610f8f8383612033565b610f9761210b565b610f9f6121b6565b610fa761227c565b8015610fb9576000805461ff00191690555b505050565b6001600160a01b038516600090815261019460209081526040808320878452825291829020548251808401909352601e83527f454950333030393a20617574686f72697a6174696f6e206973207573656400009183019190915260ff16156110a45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611069578181015183820152602001611051565b50505050905090810190601f1680156110965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50604080517f158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a159742960208201526001600160a01b038716818301526060818101879052825180830390910181526080909101909152600061111061110461232e565b83516020850120612361565b9050866001600160a01b0316611128828787876123b7565b6001600160a01b0316146040518060400160405280601a81526020017f454950333030393a20696e76616c6964207369676e6174757265000000000000815250906111b45760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611069578181015183820152602001611051565b506001600160a01b0387166000818152610194602090815260408083208a8452909152808220805460ff19166001179055518892917f1cdd46ff242716cdaa72d159d339a485b3438398348d68f09d7c8c0a59353d8191a350505050505050565b60c95460ff1690565b6001600160a01b031660009081526097602052604090205490565b7fd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de881565b6101f95460ff16156112a05760405162461bcd60e51b815260040180806020018281038252602b815260200180612e73602b913960400191505060405180910390fd5b6112ad6000610b2e6118ab565b6112e85760405162461bcd60e51b815260040180806020018281038252602f815260200180612ec0602f913960400191505060405180910390fd5b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b019020611319906113146118ab565b610b6e565b6b033b2e3c9fd0803ce800000061012d556101f9805460ff19166001179055565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902061136690610b2e6118ab565b6113a15760405162461bcd60e51b8152600401808060200182810382526034815260200180612f1f6034913960400191505060405180910390fd5b610e616123df565b60008281526065602052604081206113c7908363ffffffff61246d16565b9392505050565b60008281526065602052604081206113c7908363ffffffff61247916565b609b8054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a3f5780601f10610a1457610100808354040283529160200191610a3f565b7f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a226781565b600081565b6000610a5e6114836118ab565b84610aec856040518060600160405280602581526020016130ff60259139609860006114ad6118ab565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff611b0116565b6000610a5e6114f16118ab565b848461199b565b604080517f5452414e534645525f415554484f52495a45525f524f4c4500000000000000008152905190819003601801902081565b6000818152606560205260408120610a629061248e565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902061157090610b2e6118ab565b6115ab5760405162461bcd60e51b8152600401808060200182810382526030815260200180612d9f6030913960400191505060405180910390fd5b60006115b63061121e565b1115610e6157610e61306115c93061121e565b611e84565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902081565b60008281526065602052604090206002015461160f90610b2e6118ab565b610bdc5760405162461bcd60e51b8152600401808060200182810382526030815260200180612eef6030913960400191505060405180910390fd5b7f158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a159742981565b6001600160a01b03918216600090815260986020908152604080832093909416825291909152205490565b604080517f5452414e534645525f415554484f52495a45525f524f4c450000000000000000815290519081900360180190206116d5908a6113ce565b6117105760405162461bcd60e51b8152600401808060200182810382526057815260200180612f536057913960600191505060405180910390fd5b6117427f7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a22678a8a8a8a8a8a8a8a8a612499565b505050505050505050565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902081565b6001600160a01b0391909116600090815261019460209081526040808320938352929052205460ff1690565b60006117a661232e565b905090565b6117b36118ab565b6001600160a01b0316886001600160a01b0316146118025760405162461bcd60e51b8152600401808060200182810382526021815260200180612df66021913960400191505060405180910390fd5b604080517f5452414e534645525f415554484f52495a45525f524f4c4500000000000000008152905190819003601801902061183e908a6113ce565b6118795760405162461bcd60e51b8152600401808060200182810382526057815260200180612f536057913960600191505060405180910390fd5b6117427fd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de88a8a8a8a8a8a8a8a8a612499565b3390565b6001600160a01b0383166118f45760405162461bcd60e51b81526004018080602001828103825260248152602001806130ba6024913960400191505060405180910390fd5b6001600160a01b0382166119395760405162461bcd60e51b8152600401808060200182810382526022815260200180612d4f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260986020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166119e05760405162461bcd60e51b81526004018080602001828103825260258152602001806130956025913960400191505060405180910390fd5b6001600160a01b038216611a255760405162461bcd60e51b8152600401808060200182810382526023815260200180612cdb6023913960400191505060405180910390fd5b611a2d611c93565b611a7081604051806060016040528060268152602001612e17602691396001600160a01b038616600090815260976020526040902054919063ffffffff611b0116565b6001600160a01b038085166000908152609760205260408082209390935590841681522054611aa5908263ffffffff611c3916565b6001600160a01b0380841660008181526097602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611b535760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611069578181015183820152602001611051565b505050900390565b6000828152606560205260409020611b79908263ffffffff61273216565b15610b7857611b866118ab565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152606560205260409020611be8908263ffffffff61274716565b15610b7857611bf56118ab565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000828201838110156113c7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611c9b610e61565b611ca3611215565b15610e615760405162461bcd60e51b81526004018080602001828103825260318152602001806131246031913960400191505060405180910390fd5b60c95460ff16611d36576040805162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b60c9805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611d696118ab565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b038216611de1576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611ded6000838361275c565b609954611e00908263ffffffff611c3916565b6099556001600160a01b038216600090815260976020526040902054611e2c908263ffffffff611c3916565b6001600160a01b03831660008181526097602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611ec95760405162461bcd60e51b81526004018080602001828103825260218152602001806130746021913960400191505060405180910390fd5b611ed582600083610fb9565b611f1881604051806060016040528060228152602001612d2d602291396001600160a01b038516600090815260976020526040902054919063ffffffff611b0116565b6001600160a01b038316600090815260976020526040902055609954611f44908263ffffffff61276716565b6099556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b303b1590565b600054610100900460ff1680611fab5750611fab611f8c565b80611fb9575060005460ff16155b611ff45760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff1615801561201f576000805460ff1961ff0019909116610100171660011790555b8015610ee5576000805461ff001916905550565b600054610100900460ff168061204c575061204c611f8c565b8061205a575060005460ff16155b6120955760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff161580156120c0576000805460ff1961ff0019909116610100171660011790555b82516120d390609a906020860190612c20565b5081516120e790609b906020850190612c20565b50609c805460ff191660121790558015610fb9576000805461ff0019169055505050565b600054610100900460ff16806121245750612124611f8c565b80612132575060005460ff16155b61216d5760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff16158015612198576000805460ff1961ff0019909116610100171660011790555b60c9805460ff191690558015610ee5576000805461ff001916905550565b600054610100900460ff16806121cf57506121cf611f8c565b806121dd575060005460ff16155b6122185760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff16158015612243576000805460ff1961ff0019909116610100171660011790555b61225060006113146118ab565b604080516a5041555345525f524f4c4560a81b8152905190819003600b01902061201f906113146118ab565b600054610100900460ff16806122955750612295611f8c565b806122a3575060005460ff16155b6122de5760405162461bcd60e51b815260040180806020018281038252602e815260200180613046602e913960400191505060405180910390fd5b600054610100900460ff16158015612309576000805460ff1961ff0019909116610100171660011790555b6b019d971e4fe8401e7400000061012d5561201f6123256118ab565b61012d54611d86565b60006117a66040518080612fcc60529139605201905060405180910390206123546127a9565b61235c6127b0565b6127b7565b604080517f19010000000000000000000000000000000000000000000000000000000000006020808301919091526022820194909452604280820193909352815180820390930183526062019052805191012090565b60008060006123c8878787876127fc565b915091506123d5816128ed565b5095945050505050565b60c95460ff1615612437576040805162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b60c9805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d696118ab565b60006113c78383612a5e565b60006113c7836001600160a01b038416612ac2565b6000610a6282612ada565b8542116124d75760405162461bcd60e51b8152600401808060200182810382526027815260200180612dcf6027913960400191505060405180910390fd5b8442106125155760405162461bcd60e51b81526004018080602001828103825260218152602001806130de6021913960400191505060405180910390fd5b6001600160a01b038916600090815261019460209081526040808320878452825291829020548251808401909352601e83527f454950333030393a20617574686f72697a6174696f6e206973207573656400009183019190915260ff16156125be5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611069578181015183820152602001611051565b5060408051602081018c90526001600160a01b03808c16828401528a1660608201526080810189905260a0810188905260c0810187905260e080820187905282518083039091018152610100909101909152600061261d61110461232e565b90508a6001600160a01b0316612635828787876123b7565b6001600160a01b0316146040518060400160405280601a81526020017f454950333030393a20696e76616c6964207369676e6174757265000000000000815250906126c15760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611069578181015183820152602001611051565b506001600160a01b038b166000818152610194602090815260408083208a8452909152808220805460ff19166001179055518892917f98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a591a36127248b8b8b61199b565b505050505050505050505050565b60006113c7836001600160a01b038416612ade565b60006113c7836001600160a01b038416612b28565b610fb9838383612bee565b60006113c783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611b01565b6101605490565b6101615490565b604080516020808201959095528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c09092019052805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561283357506000905060036128e4565b8460ff16601b1415801561284b57508460ff16601c14155b1561285c57506000905060046128e4565b60408051600080825260208083018085528a905260ff89168385015260608301889052608083018790529251909260019260a080820193601f1981019281900390910190855afa1580156128b4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166128dd575060009150600190506128e4565b9150600090505b94509492505050565b60008160048111156128fb57fe5b141561290657610ee5565b600181600481111561291457fe5b1415612967576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b600281600481111561297557fe5b14156129c8576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60038160048111156129d657fe5b1415612a135760405162461bcd60e51b8152600401808060200182810382526022815260200180612e9e6022913960400191505060405180910390fd5b6004816004811115612a2157fe5b1415610ee55760405162461bcd60e51b8152600401808060200182810382526022815260200180612faa6022913960400191505060405180910390fd5b81546000908210612aa05760405162461bcd60e51b8152600401808060200182810382526022815260200180612cb96022913960400191505060405180910390fd5b826000018281548110612aaf57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000612aea8383612ac2565b612b2057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a62565b506000610a62565b60008181526001830160205260408120548015612be45783546000198083019190810190600090879083908110612b5b57fe5b9060005260206000200154905080876000018481548110612b7857fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080612ba857fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a62565b6000915050610a62565b61012d54612c0a82612bfe610a68565b9063ffffffff611c3916565b1115612c1557600080fd5b610fb9838383610fb9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c6157805160ff1916838001178555612c8e565b82800160010185558215612c8e579182015b82811115612c8e578251825591602001919060010190612c73565b50612c9a929150612c9e565b5090565b610a4791905b80821115612c9a5760008155600101612ca456fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a20496e73756666696369656e742062616c616e636520666f72206261746368207472616e73666572505245546f6b656e56333a204f6e6c79204d696e74657220726f6c652063616e2072756e2074686973206d6574686f64454950333030393a20617574686f72697a6174696f6e206973206e6f74207965742076616c6964454950333030393a2063616c6c6572206d7573742062652074686520706179656545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d616e61676564456e68616e63656445524332303a206d75737420686176652070617573657220726f6c6520746f20756e7061757365505245546f6b656e56333a20436f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202773272076616c7565505245546f6b656e56333a204f6e6c792041646d696e20726f6c652063616e2072756e2074686973206d6574686f64416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654d616e61676564456e68616e63656445524332303a206d75737420686176652070617573657220726f6c6520746f2070617573655472616e73666572417574686f72697a61626c6545524332303a2066726f6d2061646472657373206973206e6f7420617574686f72697a656420666f72207472616e7366657257697468417574686f72697a6174696f6e45434453413a20696e76616c6964207369676e6174757265202776272076616c7565454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e74726163742945524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373454950333030393a20617574686f72697a6174696f6e206973206578706972656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4d616e61676564456e68616e63656445524332303a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bad2c516d2b9bc661bdb20f72660967b9ffc5aa513a9cf0ea4b927df7e16680764736f6c63430006020033",
  "sourceMap": "159:1588:6:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;159:1588:6;;;;;;;",
  "deployedSourceMap": "159:1588:6:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;159:1588:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:81:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2702:81:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4738:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4738:166:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3745:98;;;:::i;:::-;;;;;;;;;;;;;;;;5364:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5364:317:1;;;;;;;;;;;;;;;;;:::i;3920:112:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3920:112:12;;:::i;4282:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4282:223:12;;;;;;-1:-1:-1;;;;;4282:223:12;;:::i;:::-;;3604:81:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5456:205:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5456:205:12;;;;;;-1:-1:-1;;;;;5456:205:12;;:::i;6076:215:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6076:215:1;;;;;;;;:::i;12327:895::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12327:895:1;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;12327:895:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12327:895:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12327:895:1;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;12327:895:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12327:895:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;12327:895:1;;-1:-1:-1;12327:895:1;-1:-1:-1;12327:895:1;:::i;1786:164:2:-;;;:::i;859:191:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;859:191:6;;;;;;;;:::i;1236:87::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1236:87:6;;:::i;418:336:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;418:336:4;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;418:336:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;418:336:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;418:336:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;418:336:4;;;;;;;;-1:-1:-1;418:336:4;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;418:336:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;418:336:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;418:336:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;418:336:4;;-1:-1:-1;418:336:4;;-1:-1:-1;;;;;418:336:4:i;6523:790:7:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;6523:790:7;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1248:76:17:-;;;:::i;3901:117:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3901:117:1;-1:-1:-1;;;;;3901:117:1;;:::i;2044:136:7:-;;;:::i;306:345:6:-;;;:::i;1421:158:2:-;;;:::i;3603:136:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3603:136:12;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3603:136:12;;;;;;;;;;;;;;2588:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2588:137:12;;;;;;-1:-1:-1;;;;;2588:137:12;;:::i;2896:85:1:-;;;:::i;1763:137:7:-;;;:::i;1778:49:12:-;;;:::i;6778:266:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6778:266:1;;;;;;;;:::i;4221:172::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4221:172:1;;;;;;;;:::i;713:88:7:-;;;:::i;2893:125:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2893:125:12;;:::i;1329:415:6:-;;;:::i;199:62::-;;;:::i;4739:226:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4739:226:12;;;;;;-1:-1:-1;;;;;4739:226:12;;:::i;2261:130:7:-;;;:::i;4451:149:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4451:149:1;;;;;;;;;;:::i;4021:668:7:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;4021:668:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;637:62:2:-;;;:::i;3267:183:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3267:183:7;;;;;;;;:::i;1333:105::-;;;:::i;5465:741::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;5465:741:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2702:81:1:-;2771:5;2764:12;;;;;;;;-1:-1:-1;;2764:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2739:13;;2764:12;;2771:5;;2764:12;;2771:5;2764:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:81;;:::o;4738:166::-;4821:4;4837:39;4846:12;:10;:12::i;:::-;4860:7;4869:6;4837:8;:39::i;:::-;-1:-1:-1;4893:4:1;4738:166;;;;;:::o;3745:98::-;3824:12;;3745:98;:::o;5364:317::-;5470:4;5486:36;5496:6;5504:9;5515:6;5486:9;:36::i;:::-;5532:121;5541:6;5549:12;:10;:12::i;:::-;5563:89;5601:6;5563:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5563:19:1;;;;;;:11;:19;;;;;;5583:12;:10;:12::i;:::-;-1:-1:-1;;;;;5563:33:1;;;;;;;;;;;;-1:-1:-1;5563:33:1;;;:89;;:37;:89;:::i;:::-;5532:8;:121::i;:::-;-1:-1:-1;5670:4:1;5364:317;;;;;:::o;3920:112:12:-;3977:7;4003:12;;;:6;:12;;;;;:22;;;;3920:112::o;4282:223::-;4373:12;;;;:6;:12;;;;;:22;;;4365:45;;4397:12;:10;:12::i;:::-;4365:7;:45::i;:::-;4357:105;;;;-1:-1:-1;;;4357:105:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4473:25;4484:4;4490:7;4473:10;:25::i;:::-;4282:223;;:::o;3604:81:1:-;3669:9;;;;3604:81;:::o;5456:205:12:-;5553:12;:10;:12::i;:::-;-1:-1:-1;;;;;5542:23:12;:7;-1:-1:-1;;;;;5542:23:12;;5534:83;;;;-1:-1:-1;;;5534:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5628:26;5640:4;5646:7;5628:11;:26::i;6076:215:1:-;6164:4;6180:83;6189:12;:10;:12::i;:::-;6203:7;6212:50;6251:10;6212:11;:25;6224:12;:10;:12::i;:::-;-1:-1:-1;;;;;6212:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6212:25:1;;;:34;;;;;;;;;;;:50;:38;:50;:::i;12327:895::-;12435:4;12459:35;;;12451:44;;;;;;12505:27;:25;:27::i;:::-;12543:14;12560:12;:10;:12::i;:::-;-1:-1:-1;;;;;12606:17:1;;12582:21;12606:17;;;:9;:17;;;;;;12543:29;;-1:-1:-1;12633:519:1;12650:18;;;12633:519;;;12689:11;12703:7;;12711:1;12703:10;;;;;;;;;;;;;12689:24;;12727:17;12747:10;;12758:1;12747:13;;;;;;;;;;;;;-1:-1:-1;;;;;12747:13:1;12727:33;;12799:6;12782:13;:23;;12774:82;;;;-1:-1:-1;;;12774:82:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12878:23:1;;12870:71;;;;-1:-1:-1;;;12870:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12968:9;-1:-1:-1;;;;;12958:19:1;:6;-1:-1:-1;;;;;12958:19:1;;12955:142;;-1:-1:-1;;;;;13052:20:1;;;;;;:9;:20;;;;;:30;;;;;;13012:22;;;;;12955:142;13123:9;-1:-1:-1;;;;;13106:35:1;13115:6;-1:-1:-1;;;;;13106:35:1;;13134:6;13106:35;;;;;;;;;;;;;;;;;;-1:-1:-1;;12670:3:1;;12633:519;;;-1:-1:-1;;;;;;13161:17:1;;;;;;;:9;:17;;;;;:33;-1:-1:-1;13211:4:1;12327:895;;;;;;:::o;1786:164:2:-;675:24;;;-1:-1:-1;;;675:24:2;;;;;;;;;;;;1830:34;;1851:12;:10;:12::i;1830:34::-;1822:101;;;;-1:-1:-1;;;1822:101:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:10;:8;:10::i;:::-;1786:164::o;859:191:6:-;237:24;;;-1:-1:-1;;;237:24:6;;;;;;;;;;;;931:34;;952:12;:10;:12::i;931:34::-;923:95;;;;-1:-1:-1;;;923:95:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:17;1032:2;1036:6;1026:5;:17::i;1236:87::-;1289:27;1295:12;:10;:12::i;:::-;1309:6;1289:5;:27::i;:::-;1236:87;:::o;418:336:4:-;1024:12:11;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:11;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:11;;;;;1225:18;1213:4;1225:18;;;1170:80;509:26:4::1;:24;:26::i;:::-;545:32;:30;:32::i;:::-;587:36;610:4;616:6;587:22;:36::i;:::-;633:27;:25;:27::i;:::-;670:39;:37;:39::i;:::-;719:27;:25;:27::i;:::-;1268:14:11::0;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:11;;;1264:55;418:336:4;;;:::o;6523:790:7:-;-1:-1:-1;;;;;6705:32:7;;;;;;:20;:32;;;;;;;;:39;;;;;;;;;;6758:25;;;;;;;;;;;;;;;;;;;6705:39;;6704:40;6683:110;;;;-1:-1:-1;;;6683:110:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6683:110:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6824:106:7;;;2325:66;6824:106;;;;-1:-1:-1;;;;;6824:106:7;;;;;;6804:17;6824:106;;;;;;;;26:21:-1;;;22:32;;;6:49;;6824:106:7;;;;;;;6848:29;6973:71;7006:20;:18;:20::i;:::-;7028:15;;;;;;6973:32;:71::i;:::-;6949:95;;7136:10;-1:-1:-1;;;;;7084:62:7;:48;7109:13;7124:1;7127;7130;7084:24;:48::i;:::-;-1:-1:-1;;;;;7084:62:7;;7160:24;;;;;;;;;;;;;;;;;7063:131;;;;;-1:-1:-1;;;7063:131:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;7063:131:7;-1:-1:-1;;;;;;7205:32:7;;;;;;:20;:32;;;;;;;;:39;;;;;;;;;:46;;-1:-1:-1;;7205:46:7;7247:4;7205:46;;;7266:40;7238:5;;7205:32;7266:40;;;6523:790;;;;;;;:::o;1248:76:17:-;1310:7;;;;1248:76;:::o;3901:117:1:-;-1:-1:-1;;;;;3993:18:1;3967:7;3993:18;;;:9;:18;;;;;;;3901:117::o;2044:136:7:-;2114:66;2044:136;:::o;306:345:6:-;362:14;;;;361:15;352:72;;;;-1:-1:-1;;;352:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:41;1823:4:12;468:12:6;:10;:12::i;440:41::-;432:101;;;;-1:-1:-1;;;432:101:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:24;;;-1:-1:-1;;;237:24:6;;;;;;;;;;;;541:37;;565:12;:10;:12::i;:::-;541:10;:37::i;:::-;599:13;586:10;:26;620:14;:21;;-1:-1:-1;;620:21:6;637:4;620:21;;;306:345::o;1421:158:2:-;675:24;;;-1:-1:-1;;;675:24:2;;;;;;;;;;;;1463:34;;1484:12;:10;:12::i;1463:34::-;1455:99;;;;-1:-1:-1;;;1455:99:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1564:8;:6;:8::i;3603:136:12:-;3676:7;3702:12;;;:6;:12;;;;;:30;;3726:5;3702:30;:23;:30;:::i;:::-;3695:37;3603:136;-1:-1:-1;;;3603:136:12:o;2588:137::-;2657:4;2680:12;;;:6;:12;;;;;:38;;2710:7;2680:38;:29;:38;:::i;2896:85:1:-;2967:7;2960:14;;;;;;;;-1:-1:-1;;2960:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2935:13;;2960:14;;2967:7;;2960:14;;2967:7;2960:14;;;;;;;;;;;;;;;;;;;;;;;;1763:137:7;1834:66;1763:137;:::o;1778:49:12:-;1823:4;1778:49;:::o;6778:266:1:-;6871:4;6887:129;6896:12;:10;:12::i;:::-;6910:7;6919:96;6958:15;6919:96;;;;;;;;;;;;;;;;;:11;:25;6931:12;:10;:12::i;:::-;-1:-1:-1;;;;;6919:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6919:25:1;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;4221:172::-;4307:4;4323:42;4333:12;:10;:12::i;:::-;4347:9;4358:6;4323:9;:42::i;713:88:7:-;764:37;;;;;;;;;;;;;;;;713:88;:::o;2893:125:12:-;2956:7;2982:12;;;:6;:12;;;;;:29;;:27;:29::i;1329:415:6:-;237:24;;;-1:-1:-1;;;237:24:6;;;;;;;;;;;;1378:34;;1399:12;:10;:12::i;1378:34::-;1370:95;;;;-1:-1:-1;;;1370:95:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:1;1643:24;1661:4;1643:9;:24::i;:::-;:28;1640:98;;;1683:46;1697:4;1704:24;1722:4;1704:9;:24::i;:::-;1683:5;:46::i;199:62::-;237:24;;;-1:-1:-1;;;237:24:6;;;;;;;;;;;;199:62;:::o;4739:226:12:-;4831:12;;;;:6;:12;;;;;:22;;;4823:45;;4855:12;:10;:12::i;4823:45::-;4815:106;;;;-1:-1:-1;;;4815:106:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:130:7;2325:66;2261:130;:::o;4451:149:1:-;-1:-1:-1;;;;;4566:18:1;;;4540:7;4566:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4451:149::o;4021:668:7:-;764:37;;;;;;;;;;;;;;;;4289:39;;4323:4;4289:7;:39::i;:::-;4281:139;;;;-1:-1:-1;;;4281:139:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4430:252;1834:66;4520:4;4538:2;4554:5;4573:10;4597:11;4622:5;4641:1;4656;4671;4430:26;:252::i;:::-;4021:668;;;;;;;;;:::o;637:62:2:-;675:24;;;-1:-1:-1;;;675:24:2;;;;;;;;;;;;637:62;:::o;3267:183:7:-;-1:-1:-1;;;;;3404:32:7;;;;3377:4;3404:32;;;:20;:32;;;;;;;;:39;;;;;;;;;;;3267:183::o;1333:105::-;1385:7;1411:20;:18;:20::i;:::-;1404:27;;1333:105;:::o;5465:741::-;5738:12;:10;:12::i;:::-;-1:-1:-1;;;;;5732:18:7;:2;-1:-1:-1;;;;;5732:18:7;;5724:64;;;;-1:-1:-1;;;5724:64:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:37;;;;;;;;;;;;;;;;5806:39;;5840:4;5806:7;:39::i;:::-;5798:139;;;;-1:-1:-1;;;5798:139:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5948:251;2114:66;6037:4;6055:2;6071:5;6090:10;6114:11;6139:5;6158:1;6173;6188;5948:26;:251::i;931:104:10:-;1018:10;931:104;:::o;7469:340:1:-;-1:-1:-1;;;;;7570:19:1;;7562:68;;;;-1:-1:-1;;;7562:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7648:21:1;;7640:68;;;;-1:-1:-1;;;7640:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7719:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7770:32;;;;;;;;;;;;;;;;;7469:340;;;:::o;11104:510::-;-1:-1:-1;;;;;11209:20:1;;11201:70;;;;-1:-1:-1;;;11201:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11289:23:1;;11281:71;;;;-1:-1:-1;;;11281:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11363:27;:25;:27::i;:::-;11421:71;11443:6;11421:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11421:17:1;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;11401:17:1;;;;;;;:9;:17;;;;;;:91;;;;11525:20;;;;;;;:32;;11550:6;11525:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;11502:20:1;;;;;;;:9;:20;;;;;;;;;:55;;;;11572:35;;;;;;;11502:20;;11572:35;;;;;;;;;;;;;11104:510;;;:::o;1692:187:13:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1797:29:13;-1:-1:-1;;;1848:5:13;;;1692:187::o;6543:184:12:-;6616:12;;;;:6;:12;;;;;:33;;6641:7;6616:33;:24;:33;:::i;:::-;6612:109;;;6697:12;:10;:12::i;:::-;-1:-1:-1;;;;;6670:40:12;6688:7;-1:-1:-1;;;;;6670:40:12;6682:4;6670:40;;;;;;;;;;6543:184;;:::o;6733:188::-;6807:12;;;;:6;:12;;;;;:36;;6835:7;6807:36;:27;:36;:::i;:::-;6803:112;;;6891:12;:10;:12::i;:::-;-1:-1:-1;;;;;6864:40:12;6882:7;-1:-1:-1;;;;;6864:40:12;6876:4;6864:40;;;;;;;;;;6733:188;;:::o;834:176:13:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:194:2;2190:33;:31;:33::i;:::-;2242:8;:6;:8::i;:::-;2241:9;2233:71;;;;-1:-1:-1;;;2233:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:117:17;1668:7;;;;1660:40;;;;;-1:-1:-1;;;1660:40:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:7:::1;:15:::0;;-1:-1:-1;;2008:15:17::1;::::0;;2038:22:::1;2047:12;:10;:12::i;:::-;2038:22;::::0;;-1:-1:-1;;;;;2038:22:17;;::::1;::::0;;;;;;;::::1;::::0;;::::1;1950:117::o:0;9549:361:1:-;-1:-1:-1;;;;;9632:21:1;;9624:65;;;;;-1:-1:-1;;;9624:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;9700:40;9720:1;9724:7;9733:6;9700:11;:40::i;:::-;9766:12;;:24;;9783:6;9766:24;:16;:24;:::i;:::-;9751:12;:39;-1:-1:-1;;;;;9821:18:1;;;;;;:9;:18;;;;;;:30;;9844:6;9821:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;9800:18:1;;;;;;:9;:18;;;;;;;;:51;;;;9866:37;;;;;;;9800:18;;;;9866:37;;;;;;;;;;9549:361;;:::o;10229:401::-;-1:-1:-1;;;;;10312:21:1;;10304:67;;;;-1:-1:-1;;;10304:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10382:40;10394:7;10411:1;10415:6;10382:11;:40::i;:::-;10454:68;10477:6;10454:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10454:18:1;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;10433:18:1;;;;;;:9;:18;;;;;:89;10547:12;;:24;;10564:6;10547:24;:16;:24;:::i;:::-;10532:12;:39;10586:37;;;;;;;;10612:1;;-1:-1:-1;;;;;10586:37:1;;;;;;;;;;;;10229:401;;:::o;1409:498:11:-;1820:4;1864:17;1895:7;1409:498;:::o;858:66:10:-;1024:12:11;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:11;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:11;;;;;1225:18;1213:4;1225:18;;;1170:80;1268:14;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:11;;;858:66:10;:::o;2463:174:1:-;1024:12:11;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:11;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:11;;;;;1225:18;1213:4;1225:18;;;1170:80;2568:12:1;;::::1;::::0;:5:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2590:16:1;;::::1;::::0;:7:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2616:9:1::1;:14:::0;;-1:-1:-1;;2616:14:1::1;2628:2;2616:14;::::0;;1264:55:11;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:11;;;2463:174:1;;;:::o;1059:93:17:-;1024:12:11;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:11;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:11;;;;;1225:18;1213:4;1225:18;;;1170:80;1129:7:17::1;:15:::0;;-1:-1:-1;;1129:15:17::1;::::0;;1264:55:11;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:11;;;1059:93:17;:::o;1036:178:2:-;1024:12:11;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:11;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:11;;;;;1225:18;1213:4;1225:18;;;1170:80;1116:44:2::1;1823:4:12;1147:12:2;:10;:12::i;1116:44::-;675:24;::::0;;-1:-1:-1;;;675:24:2;;;;;;;;::::1;::::0;;;1170:37:::1;::::0;1194:12:::1;:10;:12::i;760:142:4:-:0;1024:12:11;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:11;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:11;;;;;1225:18;1213:4;1225:18;;;1170:80;841:12:4::1;828:10;:25:::0;863:31:::1;869:12;:10;:12::i;:::-;883:10;;863:5;:31::i;2929:160:0:-:0;2982:7;3008:74;1594:95;;;;;;;;;;;;;;;;;;;3042:17;:15;:17::i;:::-;3061:20;:18;:20::i;:::-;3008:21;:74::i;9117:194:8:-;9246:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9246:57:8;;;;9236:68;;;;;;9117:194::o;7461:270::-;7584:7;7604:17;7623:18;7645:25;7656:4;7662:1;7665;7668;7645:10;:25::i;:::-;7603:67;;;;7680:18;7692:5;7680:11;:18::i;:::-;-1:-1:-1;7715:9:8;7461:270;-1:-1:-1;;;;;7461:270:8:o;1776:115:17:-;1477:7;;;;1476:8;1468:37;;;;;-1:-1:-1;;;1468:37:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:7:::1;:14:::0;;-1:-1:-1;;1835:14:17::1;1845:4;1835:14;::::0;;1864:20:::1;1871:12;:10;:12::i;6052:147:16:-:0;6126:7;6168:22;6172:3;6184:5;6168:3;:22::i;5368:156::-;5448:4;5471:46;5481:3;-1:-1:-1;;;;;5501:14:16;;5471:9;:46::i;5605:115::-;5668:7;5694:19;5702:3;5694:7;:19::i;7319:1100:7:-;7620:10;7614:3;:16;7606:68;;;;-1:-1:-1;;;7606:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7698:11;7692:3;:17;7684:63;;;;-1:-1:-1;;;7684:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7766:26:7;;;;;;:20;:26;;;;;;;;:33;;;;;;;;;;7801:25;;;;;;;;;;;;;;;;;;;7766:33;;7765:34;7757:70;;;;-1:-1:-1;;;7757:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;7757:70:7;-1:-1:-1;7858:163:7;;;;;;;;;-1:-1:-1;;;;;7858:163:7;;;;;;;;;7838:17;7858:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;7858:163:7;;;;;;;-1:-1:-1;8064:71:7;8097:20;:18;:20::i;8064:71::-;8040:95;;8227:4;-1:-1:-1;;;;;8175:56:7;:48;8200:13;8215:1;8218;8221;8175:24;:48::i;:::-;-1:-1:-1;;;;;8175:56:7;;8245:24;;;;;;;;;;;;;;;;;8154:125;;;;;-1:-1:-1;;;8154:125:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;8154:125:7;-1:-1:-1;;;;;;8290:26:7;;;;;;:20;:26;;;;;;;;:33;;;;;;;;;:40;;-1:-1:-1;;8290:40:7;8326:4;8290:40;;;8345:30;8317:5;;8290:26;8345:30;;;8386:26;8396:4;8402:2;8406:5;8386:9;:26::i;:::-;7319:1100;;;;;;;;;;;;:::o;4831:141:16:-;4901:4;4924:41;4929:3;-1:-1:-1;;;;;4949:14:16;;4924:4;:41::i;5140:147::-;5213:4;5236:44;5244:3;-1:-1:-1;;;;;5264:14:16;;5236:7;:44::i;581:166:5:-;705:35;723:4;729:2;733:6;705:17;:35::i;1274:134:13:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;4472:103:0:-;4556:12;;4472:103;:::o;4814:109::-;4901:15;;4814:109;:::o;3095:340::-;3360:67;;;;;;;;;;;;;;;;;;;;;;;;;3314:9;3360:67;;;;3421:4;3360:67;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3360:67:0;;;;;;3350:78;;;;;;3095:340::o;5725:1603:8:-;5851:7;;6775:66;6762:79;;6758:161;;;-1:-1:-1;6873:1:8;;-1:-1:-1;6877:30:8;6857:51;;6758:161;6932:1;:7;;6937:2;6932:7;;:18;;;;;6943:1;:7;;6948:2;6943:7;;6932:18;6928:100;;;-1:-1:-1;6982:1:8;;-1:-1:-1;6986:30:8;6966:51;;6928:100;7139:24;;;7122:14;7139:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7122:14;;7139:24;;;;;;;-1:-1:-1;;7139:24:8;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;7139:24:8;;-1:-1:-1;;7139:24:8;;;-1:-1:-1;;;;;;;7177:20:8;;7173:101;;-1:-1:-1;7229:1:8;;-1:-1:-1;7233:29:8;;-1:-1:-1;7213:50:8;;7173:101;7292:6;-1:-1:-1;7300:20:8;;-1:-1:-1;5725:1603:8;;;;;;;;:::o;557:631::-;634:20;625:5;:29;;;;;;;;;621:561;;;670:7;;621:561;730:29;721:5;:38;;;;;;;;;717:465;;;775:34;;;-1:-1:-1;;;775:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;717:465;839:35;830:5;:44;;;;;;;;;826:356;;;890:41;;;-1:-1:-1;;;890:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;826:356;961:30;952:5;:39;;;;;;;;;948:234;;;1007:44;;-1:-1:-1;;;1007:44:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:234;1081:30;1072:5;:39;;;;;;;;;1068:114;;;1127:44;;-1:-1:-1;;;1127:44:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4390:201:16;4484:18;;4457:7;;4484:26;-1:-1:-1;4476:73:16;;;;-1:-1:-1;;;4476:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;3743:127::-;3816:4;3839:19;;;:12;;;;;:19;;;;;;:24;;;3743:127::o;3951:107::-;4033:18;;3951:107::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1699:11:16;:23;;;;;;;;;;;;;1879:18;;1857:19;;;:12;;;:19;;;;;;:40;;;;1911:11;;1657:319;-1:-1:-1;1960:5:16;1953:12;;2150:1512;2216:4;2353:19;;;:12;;;:19;;;;;;2387:15;;2383:1273;;2816:18;;-1:-1:-1;;2768:14:16;;;;2816:22;;;;2744:21;;2816:3;;:22;;3098;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;;;;;:38;;;;3316:23;;;3358:1;3316:12;;;:23;;;;;;3342:17;;;3316:43;;3465:17;;3316:3;;3465:17;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;;;908:199:4;1044:10;;1015:25;1033:6;1015:13;:11;:13::i;:::-;:17;:25;:17;:25;:::i;:::-;:39;;1007:48;;;;;;1065:35;1083:4;1089:2;1093:6;1065:17;:35::i;159:1588:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;159:1588:6;;;-1:-1:-1;159:1588:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.6.2;\n\nimport \"./PRETokenV2.sol\";\nimport \"./TransferAuthorizableERC20.sol\";\n\n/**\n * @dev Presearch ERC20 Token\n *\n * Supply capped at 1B.\n */\ncontract PRETokenV3 is PRETokenV2 {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    \n    bool private _initializedV3;\n\n    function initialize() public override {\n      require (!_initializedV3, \"PRETokenV3: Contract is already initialized\");\n      require(hasRole(DEFAULT_ADMIN_ROLE, _msgSender()), \"PRETokenV3: Only Admin role can run this method\");\n      _setupRole(MINTER_ROLE, _msgSender());\n      _maxSupply = 1000000000e18;\n      _initializedV3 = true;   \n    }\n\n    /**\n     * @dev Mints new tokens.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     * - the `totalSupply` + `amount` must not exceed max supply of 1B.\n     */\n    function mint(address to, uint256 amount) public virtual{\n      require(hasRole(MINTER_ROLE, _msgSender()), \"PRETokenV3: Only Minter role can run this method\");\n      _mint(to, amount);\n    }\n\n    /**\n     * @dev Burns `amount` tokens from the caller's address\n     *\n     * Requirements:\n     *\n     * - `amount` cannot be greater than the caller's token balance.\n     */\n    function burn(uint256 amount) public virtual {\n      _burn(_msgSender(), amount);\n    }\n\n    function recover() public virtual{\n      require(hasRole(MINTER_ROLE, _msgSender()), \"PRETokenV3: Only Minter role can run this method\");\n      // Burn lost tokens sent to the token contract so they are not locked there forever\n      // This is a safety measure which enables tokens to be re-minted later\n      if(balanceOf(address(this)) > 0) {\n        _burn(address(this), balanceOf(address(this)));\n      }\n    }\n\n}\n",
  "sourcePath": "/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PRETokenV3.sol",
  "ast": {
    "absolutePath": "/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PRETokenV3.sol",
    "exportedSymbols": {
      "PRETokenV3": [
        1214
      ]
    },
    "id": 1215,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1098,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:6"
      },
      {
        "absolutePath": "/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PRETokenV2.sol",
        "file": "./PRETokenV2.sol",
        "id": 1099,
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 1097,
        "src": "24:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/TransferAuthorizableERC20.sol",
        "file": "./TransferAuthorizableERC20.sol",
        "id": 1100,
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 1622,
        "src": "51:41:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1101,
              "name": "PRETokenV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1096,
              "src": "182:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PRETokenV2_$1096",
                "typeString": "contract PRETokenV2"
              }
            },
            "id": 1102,
            "nodeType": "InheritanceSpecifier",
            "src": "182:10:6"
          }
        ],
        "contractDependencies": [
          154,
          787,
          907,
          1034,
          1096,
          1621,
          2255,
          2325,
          2603,
          2859,
          3401
        ],
        "contractKind": "contract",
        "documentation": "@dev Presearch ERC20 Token\n * Supply capped at 1B.",
        "fullyImplemented": true,
        "id": 1214,
        "linearizedBaseContracts": [
          1214,
          1096,
          1621,
          154,
          1034,
          907,
          3401,
          787,
          2859,
          2603,
          2255,
          2325
        ],
        "name": "PRETokenV3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 1107,
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1214,
            "src": "199:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1103,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "199:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 1105,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "247:13:6",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 1104,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "237:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1106,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "237:24:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1109,
            "name": "_initializedV3",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1214,
            "src": "272:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1108,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "272:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              1070
            ],
            "body": {
              "id": 1142,
              "nodeType": "Block",
              "src": "344:307:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "361:15:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1114,
                          "name": "_initializedV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "362:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "505245546f6b656e56333a20436f6e747261637420697320616c726561647920696e697469616c697a6564",
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "378:45:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_480b34bcf9983ebe4f3432f9558a130594a2658401cb25800246c4f612036846",
                          "typeString": "literal_string \"PRETokenV3: Contract is already initialized\""
                        },
                        "value": "PRETokenV3: Contract is already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_480b34bcf9983ebe4f3432f9558a130594a2658401cb25800246c4f612036846",
                          "typeString": "literal_string \"PRETokenV3: Contract is already initialized\""
                        }
                      ],
                      "id": 1113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "352:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "352:72:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "352:72:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1121,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2371,
                            "src": "448:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1122,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "468:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "468:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1120,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2405,
                          "src": "440:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "440:41:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "505245546f6b656e56333a204f6e6c792041646d696e20726f6c652063616e2072756e2074686973206d6574686f64",
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "483:49:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6171d0972a59d1580001de3563222bab38e93142ae9c7277298d930b3002b160",
                          "typeString": "literal_string \"PRETokenV3: Only Admin role can run this method\""
                        },
                        "value": "PRETokenV3: Only Admin role can run this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6171d0972a59d1580001de3563222bab38e93142ae9c7277298d930b3002b160",
                          "typeString": "literal_string \"PRETokenV3: Only Admin role can run this method\""
                        }
                      ],
                      "id": 1119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "432:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "432:101:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "432:101:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1129,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "552:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1130,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "565:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "565:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1128,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2535,
                      "src": "541:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "541:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1134,
                      "name": "_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "586:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030303030303030653138",
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "599:13:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000000000"
                      },
                      "value": "1000000000e18"
                    },
                    "src": "586:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "586:26:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1138,
                      "name": "_initializedV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "620:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "637:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "620:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "620:21:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 1143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1111,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "335:8:6"
            },
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:6"
            },
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:6"
            },
            "scope": 1214,
            "src": "306:345:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "915:135:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1152,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "939:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1153,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "952:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "952:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1151,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2405,
                          "src": "931:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "931:34:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "505245546f6b656e56333a204f6e6c79204d696e74657220726f6c652063616e2072756e2074686973206d6574686f64",
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "967:50:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25b9ec7be4d34b27fd45983da5c64e527fbb634b77980a44d45fb048884f0d55",
                          "typeString": "literal_string \"PRETokenV3: Only Minter role can run this method\""
                        },
                        "value": "PRETokenV3: Only Minter role can run this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25b9ec7be4d34b27fd45983da5c64e527fbb634b77980a44d45fb048884f0d55",
                          "typeString": "literal_string \"PRETokenV3: Only Minter role can run this method\""
                        }
                      ],
                      "id": 1150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "923:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1158,
                  "nodeType": "ExpressionStatement",
                  "src": "923:95:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1160,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "1032:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1161,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "1036:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1159,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "1026:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:17:6"
                }
              ]
            },
            "documentation": "@dev Mints new tokens.\n     * Requirements:\n     * - the caller must have the `MINTER_ROLE`.\n- the `totalSupply` + `amount` must not exceed max supply of 1B.",
            "functionSelector": "40c10f19",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1145,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1165,
                  "src": "873:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1147,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1165,
                  "src": "885:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "872:28:6"
            },
            "returnParameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:6"
            },
            "scope": 1214,
            "src": "859:191:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1176,
              "nodeType": "Block",
              "src": "1281:42:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1171,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "1295:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1295:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1173,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "1309:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1170,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "1289:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:27:6"
                }
              ]
            },
            "documentation": "@dev Burns `amount` tokens from the caller's address\n     * Requirements:\n     * - `amount` cannot be greater than the caller's token balance.",
            "functionSelector": "42966c68",
            "id": 1177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1177,
                  "src": "1250:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1249:16:6"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:0:6"
            },
            "scope": 1214,
            "src": "1236:87:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1212,
              "nodeType": "Block",
              "src": "1362:382:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1182,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "1386:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1183,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "1399:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1399:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1181,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2405,
                          "src": "1378:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:34:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "505245546f6b656e56333a204f6e6c79204d696e74657220726f6c652063616e2072756e2074686973206d6574686f64",
                        "id": 1186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:50:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25b9ec7be4d34b27fd45983da5c64e527fbb634b77980a44d45fb048884f0d55",
                          "typeString": "literal_string \"PRETokenV3: Only Minter role can run this method\""
                        },
                        "value": "PRETokenV3: Only Minter role can run this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25b9ec7be4d34b27fd45983da5c64e527fbb634b77980a44d45fb048884f0d55",
                          "typeString": "literal_string \"PRETokenV3: Only Minter role can run this method\""
                        }
                      ],
                      "id": 1180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1370:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:95:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1192,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1661:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                "typeString": "contract PRETokenV3"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                "typeString": "contract PRETokenV3"
                              }
                            ],
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1653:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1190,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1653:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1189,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "1643:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 1194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1643:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1670:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1643:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1211,
                  "nodeType": "IfStatement",
                  "src": "1640:98:6",
                  "trueBody": {
                    "id": 1210,
                    "nodeType": "Block",
                    "src": "1673:65:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1200,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1697:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                    "typeString": "contract PRETokenV3"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                    "typeString": "contract PRETokenV3"
                                  }
                                ],
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1689:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1198,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1689:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1689:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1205,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1722:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                        "typeString": "contract PRETokenV3"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                        "typeString": "contract PRETokenV3"
                                      }
                                    ],
                                    "id": 1204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1714:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1203,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1714:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1714:13:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1202,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "1704:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1704:24:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1197,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "1683:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1683:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1209,
                        "nodeType": "ExpressionStatement",
                        "src": "1683:46:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ce746024",
            "id": 1213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recover",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:2:6"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:6"
            },
            "scope": 1214,
            "src": "1329:415:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 1215,
        "src": "159:1588:6"
      }
    ],
    "src": "0:1748:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PRETokenV3.sol",
    "exportedSymbols": {
      "PRETokenV3": [
        1214
      ]
    },
    "id": 1215,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1098,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:6"
      },
      {
        "absolutePath": "/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/PRETokenV2.sol",
        "file": "./PRETokenV2.sol",
        "id": 1099,
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 1097,
        "src": "24:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/treygrainger/Desktop/PRE-Token-multisig/contracts/TransferAuthorizableERC20.sol",
        "file": "./TransferAuthorizableERC20.sol",
        "id": 1100,
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 1622,
        "src": "51:41:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1101,
              "name": "PRETokenV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1096,
              "src": "182:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PRETokenV2_$1096",
                "typeString": "contract PRETokenV2"
              }
            },
            "id": 1102,
            "nodeType": "InheritanceSpecifier",
            "src": "182:10:6"
          }
        ],
        "contractDependencies": [
          154,
          787,
          907,
          1034,
          1096,
          1621,
          2255,
          2325,
          2603,
          2859,
          3401
        ],
        "contractKind": "contract",
        "documentation": "@dev Presearch ERC20 Token\n * Supply capped at 1B.",
        "fullyImplemented": true,
        "id": 1214,
        "linearizedBaseContracts": [
          1214,
          1096,
          1621,
          154,
          1034,
          907,
          3401,
          787,
          2859,
          2603,
          2255,
          2325
        ],
        "name": "PRETokenV3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 1107,
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1214,
            "src": "199:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1103,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "199:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 1105,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "247:13:6",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 1104,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "237:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1106,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "237:24:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1109,
            "name": "_initializedV3",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1214,
            "src": "272:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1108,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "272:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              1070
            ],
            "body": {
              "id": 1142,
              "nodeType": "Block",
              "src": "344:307:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "361:15:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1114,
                          "name": "_initializedV3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "362:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "505245546f6b656e56333a20436f6e747261637420697320616c726561647920696e697469616c697a6564",
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "378:45:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_480b34bcf9983ebe4f3432f9558a130594a2658401cb25800246c4f612036846",
                          "typeString": "literal_string \"PRETokenV3: Contract is already initialized\""
                        },
                        "value": "PRETokenV3: Contract is already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_480b34bcf9983ebe4f3432f9558a130594a2658401cb25800246c4f612036846",
                          "typeString": "literal_string \"PRETokenV3: Contract is already initialized\""
                        }
                      ],
                      "id": 1113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "352:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "352:72:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "352:72:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1121,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2371,
                            "src": "448:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1122,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "468:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "468:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1120,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2405,
                          "src": "440:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "440:41:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "505245546f6b656e56333a204f6e6c792041646d696e20726f6c652063616e2072756e2074686973206d6574686f64",
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "483:49:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6171d0972a59d1580001de3563222bab38e93142ae9c7277298d930b3002b160",
                          "typeString": "literal_string \"PRETokenV3: Only Admin role can run this method\""
                        },
                        "value": "PRETokenV3: Only Admin role can run this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6171d0972a59d1580001de3563222bab38e93142ae9c7277298d930b3002b160",
                          "typeString": "literal_string \"PRETokenV3: Only Admin role can run this method\""
                        }
                      ],
                      "id": 1119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "432:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "432:101:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "432:101:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1129,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "552:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1130,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "565:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "565:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1128,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2535,
                      "src": "541:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "541:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1134,
                      "name": "_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "586:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31303030303030303030653138",
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "599:13:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000000000"
                      },
                      "value": "1000000000e18"
                    },
                    "src": "586:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "586:26:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1138,
                      "name": "_initializedV3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "620:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "637:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "620:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "620:21:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 1143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1111,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "335:8:6"
            },
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:6"
            },
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:6"
            },
            "scope": 1214,
            "src": "306:345:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "915:135:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1152,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "939:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1153,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "952:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "952:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1151,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2405,
                          "src": "931:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "931:34:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "505245546f6b656e56333a204f6e6c79204d696e74657220726f6c652063616e2072756e2074686973206d6574686f64",
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "967:50:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25b9ec7be4d34b27fd45983da5c64e527fbb634b77980a44d45fb048884f0d55",
                          "typeString": "literal_string \"PRETokenV3: Only Minter role can run this method\""
                        },
                        "value": "PRETokenV3: Only Minter role can run this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25b9ec7be4d34b27fd45983da5c64e527fbb634b77980a44d45fb048884f0d55",
                          "typeString": "literal_string \"PRETokenV3: Only Minter role can run this method\""
                        }
                      ],
                      "id": 1150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "923:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1158,
                  "nodeType": "ExpressionStatement",
                  "src": "923:95:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1160,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "1032:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1161,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "1036:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1159,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "1026:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:17:6"
                }
              ]
            },
            "documentation": "@dev Mints new tokens.\n     * Requirements:\n     * - the caller must have the `MINTER_ROLE`.\n- the `totalSupply` + `amount` must not exceed max supply of 1B.",
            "functionSelector": "40c10f19",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1145,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1165,
                  "src": "873:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1147,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1165,
                  "src": "885:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "872:28:6"
            },
            "returnParameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:6"
            },
            "scope": 1214,
            "src": "859:191:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1176,
              "nodeType": "Block",
              "src": "1281:42:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1171,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "1295:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1295:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1173,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "1309:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1170,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "1289:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:27:6"
                }
              ]
            },
            "documentation": "@dev Burns `amount` tokens from the caller's address\n     * Requirements:\n     * - `amount` cannot be greater than the caller's token balance.",
            "functionSelector": "42966c68",
            "id": 1177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1177,
                  "src": "1250:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1249:16:6"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1281:0:6"
            },
            "scope": 1214,
            "src": "1236:87:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1212,
              "nodeType": "Block",
              "src": "1362:382:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1182,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "1386:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1183,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2239,
                              "src": "1399:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1399:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1181,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2405,
                          "src": "1378:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:34:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "505245546f6b656e56333a204f6e6c79204d696e74657220726f6c652063616e2072756e2074686973206d6574686f64",
                        "id": 1186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:50:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25b9ec7be4d34b27fd45983da5c64e527fbb634b77980a44d45fb048884f0d55",
                          "typeString": "literal_string \"PRETokenV3: Only Minter role can run this method\""
                        },
                        "value": "PRETokenV3: Only Minter role can run this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25b9ec7be4d34b27fd45983da5c64e527fbb634b77980a44d45fb048884f0d55",
                          "typeString": "literal_string \"PRETokenV3: Only Minter role can run this method\""
                        }
                      ],
                      "id": 1180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1370:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:95:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1192,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1661:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                "typeString": "contract PRETokenV3"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                "typeString": "contract PRETokenV3"
                              }
                            ],
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1653:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1190,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1653:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1189,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "1643:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 1194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1643:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1670:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1643:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1211,
                  "nodeType": "IfStatement",
                  "src": "1640:98:6",
                  "trueBody": {
                    "id": 1210,
                    "nodeType": "Block",
                    "src": "1673:65:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1200,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1697:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                    "typeString": "contract PRETokenV3"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                    "typeString": "contract PRETokenV3"
                                  }
                                ],
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1689:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1198,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1689:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1689:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1205,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1722:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                        "typeString": "contract PRETokenV3"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PRETokenV3_$1214",
                                        "typeString": "contract PRETokenV3"
                                      }
                                    ],
                                    "id": 1204,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1714:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1203,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1714:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1714:13:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1202,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 277,
                                "src": "1704:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1704:24:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1197,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "1683:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1683:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1209,
                        "nodeType": "ExpressionStatement",
                        "src": "1683:46:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ce746024",
            "id": 1213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recover",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:2:6"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:6"
            },
            "scope": 1214,
            "src": "1329:415:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 1215,
        "src": "159:1588:6"
      }
    ],
    "src": "0:1748:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x1cdd46ff242716cdaa72d159d339a485b3438398348d68f09d7c8c0a59353d81": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "authorizer",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "name": "AuthorizationCanceled",
          "type": "event"
        },
        "0x98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "authorizer",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "name": "AuthorizationUsed",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xEC213F83defB583af3A000B1c0ada660b1902A0F",
      "transactionHash": "0xe59380185ed86e6186022087a90fc53b47049fa3bce9a2d97405ff671d252c0e"
    },
    "5": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x1cdd46ff242716cdaa72d159d339a485b3438398348d68f09d7c8c0a59353d81": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "authorizer",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "name": "AuthorizationCanceled",
          "type": "event"
        },
        "0x98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "authorizer",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "name": "AuthorizationUsed",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3aF7260f3f956a805D9e139C9882F9E5D88165ec",
      "transactionHash": "0xc1874d5c514939debb3619e26917795af8b28a619c282f9f0b27f4e25156fcd9"
    },
    "2017": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x1cdd46ff242716cdaa72d159d339a485b3438398348d68f09d7c8c0a59353d81": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "authorizer",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "name": "AuthorizationCanceled",
          "type": "event"
        },
        "0x98de503528ee59b575ef0c0a2576a82497bfc029a5685b209e9ec333479b10a5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "authorizer",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "name": "AuthorizationUsed",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x59c644b40D825DabF0a4479b107Cf4Ffd4fFc199",
      "transactionHash": "0xadcbc2a6f6293eb748c998342a8ac4353a1375aa4eca3edb72c477d730df3165"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2023-09-01T10:00:01.711Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Presearch ERC20 Token * Supply capped at 1B.",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "authorizationState(address,bytes32)": {
        "details": "Nonces are randomly generated 32-byte data unique to the authorizer's address",
        "params": {
          "authorizer": "Authorizer's address",
          "nonce": "Nonce of the authorization"
        },
        "returns": {
          "_0": "True if the nonce is used"
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `amount` tokens from the caller's address     * Requirements:     * - `amount` cannot be greater than the caller's token balance."
      },
      "cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)": {
        "params": {
          "authorizer": "Authorizer's address",
          "nonce": "Nonce of the authorization",
          "r": "r of the signature",
          "s": "s of the signature",
          "v": "v of the signature"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Mints new tokens.     * Requirements:     * - the caller must have the `MINTER_ROLE`. - the `totalSupply` + `amount` must not exceed max supply of 1B."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers.     * See {ERC20Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
        "details": "This has an additional check to ensure that the payee's address matches the caller of this function to prevent front-running attacks. (See security considerations)",
        "params": {
          "from": "Payer's address (Authorizer)",
          "nonce": "Unique nonce",
          "r": "r of the signature",
          "s": "s of the signature",
          "to": "Payee's address",
          "v": "v of the signature",
          "validAfter": "The time after which this is valid (unix time)",
          "validBefore": "The time before which this is valid (unix time)",
          "value": "Amount to be transferred"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferBatch(address[],uint256[])": {
        "details": "Send multiple transfers as a batch within a single transaction This is much more efficient than sending independent transactions.  This method should between 28% of gas (2 transfers)  and 50%-60% of gas (10+ transfers)     * Calling conditions:     * Emits an {Transfer} event for each individual successful transfer.     * Requirements:     * - `recipients[]` length must equal  `amounts[]` length. -  The amount to send `recipients[i]` must be at `amounts[i]` - `recipient` cannot be the zero address. - `balance` of the calling account must be >= the sum of values in `amounts` going to other accounts"
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
        "params": {
          "from": "Payer's address (Authorizer)",
          "nonce": "Unique nonce",
          "r": "r of the signature",
          "s": "s of the signature",
          "to": "Payee's address",
          "v": "v of the signature",
          "validAfter": "The time after which this is valid (unix time)",
          "validBefore": "The time before which this is valid (unix time)",
          "value": "Amount to be transferred"
        }
      },
      "unpause()": {
        "details": "Unpauses all token transfers.     * See {ERC20Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      }
    }
  },
  "userdoc": {
    "methods": {
      "authorizationState(address,bytes32)": {
        "notice": "Returns the state of an authorization"
      },
      "cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)": {
        "notice": "Attempt to cancel an authorization"
      },
      "receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
        "notice": "Receive a transfer with a signed authorization from the payer"
      },
      "transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
        "notice": "Execute a transfer with a signed authorization"
      }
    }
  }
}